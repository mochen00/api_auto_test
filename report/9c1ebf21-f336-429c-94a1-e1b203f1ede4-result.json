{"name": "test_timestamp[--False]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "timestamp = '', target = '', expected = 'False', env_config = {'host': {'url': 'https://postman-echo.com/time/before'}}\n\n    @allure.feature('postman')\n    @allure.story('postman-api')\n    @pytest.mark.parametrize('timestamp,target,expected',test_data)\n    def test_timestamp(timestamp,target,expected,env_config):\n        \"\"\"\n        用例描述：测试不同的timestamp和target\n        \"\"\"\n        #从yml配置文件获取url\n        url = env_config['host']['url']\n        payload = {'timestamp':timestamp,'target':target}\n        r = requests.get(url,params=payload)\n        print(r.url)\n>       result = r.json()\n\ntest_case/test_postman_api.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nvenv/lib/python3.7/site-packages/requests/models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\n/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py:348: in loads\n    return _default_decoder.decode(s)\n/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x102e43c90>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/usr/local/Cellar/python/3.7.7/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/decoder.py:355: JSONDecodeError"}, "description": "\n    用例描述：测试不同的timestamp和target\n    ", "parameters": [{"name": "timestamp", "value": "''"}, {"name": "target", "value": "''"}, {"name": "expected", "value": "'False'"}], "start": 1589858635910, "stop": 1589858637747, "uuid": "1f9e514a-c1a9-4019-a0ac-6adc9ab28dbc", "historyId": "7ba14cc0c31b32f7648e0c82b0a58707", "testCaseId": "de80444465807edcb3632cf6254793cf", "fullName": "test_case.test_postman_api#test_timestamp", "labels": [{"name": "feature", "value": "postman"}, {"name": "story", "value": "postman-api"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_postman_api"}, {"name": "host", "value": "zhaofan03.local"}, {"name": "thread", "value": "9039-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_postman_api"}]}